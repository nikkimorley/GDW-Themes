// Import Platform Assets
@import '../template.less';

// Font Link
@import url('https://fonts.googleapis.com/css2?family=Montserrat&family=Oswald:wght@600&display=swap');

// Font
@font: 'Montserrat', sans-serif;
@font-headline: 'Oswald', sans-serif;

// Image Path
@path: './images/';

// Media Query Sizes
@desktop: ~"only screen and (max-width: @{screen-lg})"; // laptop size
@tablet: ~"only screen and (max-width: @{screen-md})"; // tablet size
@mobile: ~"only screen and (max-width: @{screen-sm})"; // larger phones
@mobile-xs: ~"only screen and (max-width: @{screen-xs})"; // smaller phones

// Colors
@themeColor1: #ED4041;
@themeColor2: #1A1A1A;
@themeColor3: #000000;

@white: #FFFFFF;

// Variables
@links: @themeColor1;
@hover: lighten(@links, 10%);

// Include this in any class you want to transition
.transition {
	-webkit-transition: .3s all;
	transition: .3s all;
}

body {
	font-family: @font;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	overflow-x: hidden;
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-family: @font;
	}
}

a {
	color: @links;
	.transition;
	&:hover {
		color: @hover;
		text-decoration: none;
	}
}

/* ==================================================================

					// CUSTOM BANNER STYLES

===================================================================== */

/*=== fonts & reusable styles ==*/
#main {
	h1, h2, h3, h4, h5, h6 {
		// font-family: ;
		// color: ;
	}
	h1 {
		font-size: 1.8em;
	}
	h2 {
		font-size: 1.7em;
	}
	h3 {
		font-size: 1.5em;
	}
	h4, h5, h6 {
		font-size: 1.5em;
	}
}

/* ==================================================================

					// CUSTOM STYLES

===================================================================== */

// .example-class is only to demonstrate media queries nested in classes
.example-class {
	font-size: 18px;
	padding: 15px 0;
	color: #000;
	background: pink;

	@media @desktop {
		color: #fff;
		background: blue 
	}

	@media @tablet {
		background: steelblue;
	}

	@media @mobile {
		background: purple;
	}

	@media @mobile-xs {
		background: green;
	}
	
}

.headline-styles {
	font-family: @font-headline;
	font-weight: 600;
	color: @white;
	text-transform: uppercase;
}

.theme-headline {
	.headline-styles;
	font-size: 50px;
	letter-spacing: 2.5px;
	line-height: 50px;
}

.theme-btn {
	.headline-styles;
	display: inline-block;
	font-size: 20px;
	letter-spacing: 1px;
	line-height: 50px;
	background-color: @themeColor1;
	padding: 5px 25px;
	.transition;
	&:hover {
		background-color: @themeColor2;
		color: @white;
	}
}

.theme-text {
	font-family: @font;
	font-size: 20px;
	color: @white;
}

// Custom Styles
#theme-custom-banner {
	background: black;
	.overlay {
		content: '';
		position: absolute;
		background: fade(black, 70%);
		height: 100%;
		width: 100%;
		top: 0;
		left: 0;
	}
	
	#banner {
		background: url('@{path}banner.jpg') center / cover no-repeat;
		position: relative;
		padding-top: 250px;
		padding-bottom: 200px;
		text-align: center;
		z-index: 0;
		&::before {
			z-index: -1;
		}
		.theme-headline {
			max-width: 800px;
			margin: 0 auto 45px;
		}
	}

	#about {
		background: @themeColor3 url('@{path}about-img.svg') bottom 65px left 15% / auto no-repeat;
		padding-top: 150px;
		padding-bottom: 130px;
		.about-wrap {
			display: flex;
			justify-content: space-between;
		}
		.theme-headline {
			text-align: right;
			padding-top: 10px;
			&::after {
				content: '';
				display: block;
				background-color: @themeColor1;
				width: 178px;
				height: 10px;
				float: right;
				margin-top: 25px;
			}
		}
		.theme-text {
			margin-bottom: 35px;
		}
		#about-title {
			width: 40%;
		}
		#about-text {
			width: 48%;
		}
	}

	#callouts {
		background: @themeColor2;
		padding: 60px;
		margin: 0 auto 30px;
		.call {
			display: inline-block;
			position: relative; // Becky - this is unnecessary here, you can turn it off in dev tools and see no effect
			font-family: @font-headline;
			font-weight: 600;
			font-size: 20px;
			/* 
			Becky - Something we'll need to keep in mind for any stock theme is any client can put whatever they want in the text area. Sometimes this means our text wraps to two lines or even more. I like where your head is at for accuracy by making fixed heights and width, but we will need these sections to adapt to client changes and fixed heights especially aren't condusive to this. 
			
			There are a few approaches here you can take, but you may also want to consider the mobile breakpoints when choosing your approach. In desktop these are four across. However, in smaller screen sizes we usually move these to two rows of two and finally in mobile we move it all to one column. 

			The best bet here would probably be some sort of flexbox solution in which you will need parent element to wrap the children (since you can't target .container due to platform conflicts). If you need help wrapping your head around this since it's pretty GDW specific, let me know.

			Something you don't know that would be more clear if the XD file had a grid for the container: The callouts on the edges align with the edge of the container. Essentially this is like justify-content: space-between if you were targeting a parent flex item. Let me know if you need me to explain this better and I'll demo.
			*/
			height: 240px;
			width: 240px;
			padding: 40px 30px;
			margin: 20px;
			background-color: @themeColor2;
			border: 2px solid @themeColor1;
			border-radius: 5px;
			text-transform: uppercase;
			text-align: center;
			/* 
			Becky - We already worked through this but just leaving this note for morning you. :) 
			The a.call is unnecessary here since you are already in the element with the call class. However, this is where you'll need &:hover for the hover state.
			*/
			a.call {
				
			}
		}
		.call-text {
			/*
			Becky - Since you are targeting .call-text here for the margin, it makes sense to put the font styling here as well. While it doesn't matter for the code rendering, it all works fine, it's easier for a dev to find .call-text and the corresponding styles.
			
			HOWEVER!!! Like all things code there is another way. You COULD leave the text styles where they are and instead target the img with a margin-bottom: 40px and avoid referencing .call-text altogether. Both ways achieve the same thing in this case. 
			*/
			margin-top: 40px;
		}
	}

	#testimonial {
		background: @themeColor3 url('@{path}quote.svg') top 20px center / auto no-repeat;
		padding-top: 85px;
		/*
		Becky - The margin here is unnecessary. Change the color on line 156 to see why. We'll end up removing line 156 later and only did this to see the text when setting up the layout so you may just want to keep the color something other than black.
		*/
		margin: 100px auto 150px;
		/*
		Becky - I'm curious why you have repeated code here for .theme-headline. The font styles for .theme-headline that are common to all elements with .theme-headline are defined on line 126. We should only have changes .theme-headline if we are doing something different or an override like the font-size, letter-spacing, etc. that you have here. font-family, font-weight, color, etc are all duplicates. 
		*/
		.theme-headline {
			font-family: @font-headline;
			font-weight: 600;
			color: @white;
			text-transform: uppercase;
			font-size: 40px;
			letter-spacing: 2px;
			line-height: 50px;
			text-align: center;
		}
	}
	#banner2 {
		position: relative;
	}
	#banner, #banner2 {
		&::before {
			.overlay;
			}
	}
}

#theme-bottom-banner {
	
}


/* ==================================================================

					// MOBILE MEDIA QUERIES

===================================================================== */

//Screen Sizes (<1200px)
@media only screen and (max-width: @screen-lg) {
	#theme-custom-banner {

	}
	#theme-bottom-banner {

	}
}

//Screen Sizes (<992px)
@media only screen and (max-width: @screen-md) {
	#theme-custom-banner {

	}
	#theme-bottom-banner {
		
	}
}

//Screen Sizes (<768px)
@media only screen and (max-width: @screen-sm) {
	#theme-custom-banner {

	}
	#theme-bottom-banner {
		
	}
}

//small devices like iPhone 5
@media only screen and (max-width: @screen-xs) {
	#theme-custom-banner {

	}
	#theme-bottom-banner {
		
	}
}